:root {
  /** general */
  --font-family: Inter;
  --font-size: 1;
  --display-image: block;

  /** surface */
  --surface-maxWidth: 1000px;
  --surface-borderRadius: 14px;

  /** others */
  --picture-size: 300px;
  --group-count: 4;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

input,
button,
textarea,
select {
  font: inherit;
  color: currentColor;
}

a {
  color: inherit;
  text-decoration: none;
  outline: none;
}

html,
body {
  height: 100%;
  width: 100%;
  margin: 0;
}

body {
  min-height: 100%;
  min-width: 600px;
  overflow: hidden;

  font-family: var(--font-family), sans-serif;
  font-weight: 500;
  font-size: calc(var(--font-size) * var(--space-medium));
  background-color: rgb(var(--color-bg-base));
}

.visually-hidden {
  display: inline-block;
  position: absolute;
  overflow: hidden;
  clip: rect(0px, 0px, 0px, 0px);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0px;
  border: 0px none;
}

/**
 * Layout
 **/

.surface {
  position: fixed;
  top: 0;
  bottom: 0;
  left: var(--space-largest);
  right: var(--space-largest);
  margin: auto;
  height: max-content;
  max-width: var(--surface-maxWidth);

  display: flex;

  color: rgb(var(--color-fg-surface));
  background-color: rgb(var(--color-bg-surface));
  border-radius: var(--surface-borderRadius);
  border: var(--space-smallest) solid rgb(var(--color-primary-base));
  box-shadow: var(--surface-shadow);
}

.modal, .bookmarks-settings {
  display: flex;
  flex-direction: column;
  padding: var(--space-large);
  gap: var(--space-medium);
  align-items: flex-start;
}

.bookmarks-settings h1 .icon {
  height: 24px;
}


.modal .bookmarks-settings ul li {
  list-style: none;
}

.modal .bookmarks-settings ul>li>div,.modal .bookmarks-settings ul>li>div>div { 
  display: flex;
  align-items: center;
  gap: var(--space-medium);
  font-weight: 600;
}

.modal .bookmarks-settings div > ul > li {
  margin-top: var(--space-large);
}

.modal .bookmarks-settings ul li ul li {
  display: flex;
  gap: var(--space-medium);
  justify-content: start;
  align-items: center;
}

.surface.modal {
  position: fixed;
  top: 0;
  bottom: 0;
  left: var(--space-largest);
  right: var(--space-largest);
  margin: 5rem auto auto auto;
  height: max-content;
  max-width: var(--surface-maxWidth);

  display: flex;

  color: rgb(var(--color-fg-surface));
  background-color: rgb(var(--color-bg-surface));
  border-radius: var(--surface-borderRadius);
  border: var(--space-smallest) solid rgb(var(--color-primary-base));
  box-shadow: none;
}

.modal-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(var(--color-bg-surface), 0.5);
}

.modal button {
  padding: var(--space-smallest) var(--space-medium);
  background-color: rgb(var(--color-bg-base));
  border: var(--space-smallest) solid rgb(var(--color-primary-fg));
  color: rgb(var(--color-primary-fg));
  display: flex;
  align-items: center;
  font-size: (var(--font-size) * var(--space-largest));
  cursor: pointer;
  font-weight: 600;
}

.modal button .icon {
  height: 24px;
  padding: var(--space-smallest);
}

.image-wrapper {
  overflow: hidden;
  border-top-left-radius: var(--surface-borderRadius);
  border-bottom-left-radius: var(--surface-borderRadius);
}

.image {
  height: var(--picture-size);
  width: var(--picture-size);
  object-fit: cover;
  display: var(--display-image);
}

.surface > main {
  padding: var(--space-large);
  flex: 1;
  max-width: calc(100% - var(--picture-size));

  display: flex;
  flex-direction: column;
}

/**
 * Title
 **/

.surface > main > h1 {
  color: rgb(var(--color-primary-fg));
  font-size: calc(var(--font-size) * var(--space-large));
  font-weight: 500;
  margin: 0 0 var(--space-large) 0;

  white-space: nowrap;
  text-overflow: ellipsis;
  overflow-x: hidden;
}

/**
 * Searchbar
 **/

#searchbar {
  display: flex;
  align-items: stretch;
}

#searchbar > button {
  width: calc(var(--space-medium) * 2);
  height: calc(var(--space-medium) * 2);
  color: rgb(var(--color-primary-fg));

  cursor: pointer;
  background-color: transparent;
  border: none;
  outline: none;

  display: inline-flex;
  align-items: center;
  justify-content: center;
}

#searchbar > button > .feather-search {
  width: 1.2rem;
  height: 1.2rem;
}

#searchbar > button:hover {
  color: var(--color-primary-base);
}

#searchbar > button:focus-visible {
  color: rgb(var(--color-primary-base));
  background: rgb(var(--color-bg-highlight));
  outline: var(--space-smallest) solid var(--color-fg-shade);
}

#searchbar > input, input {
  height: calc(var(--space-medium) * 2);
  flex: 1;

  background-color: transparent;
  border: none;
  outline: none;
  border-bottom: var(--space-smallest) solid rgb(var(--color-fg-base));
}

#searchbar > input:focus-visible {
  border-color: rgb(var(--color-primary-base));
}

/**
 * Bookmarks
 **/

#bookmarks {
  display: flex;
  margin-top: auto;
}

.mb-auto {
  margin-bottom: auto;
}

.bookmark-group {
  width: calc(100% / var(--group-count));
}

.bookmark-group > h2 {
  color: rgb(var(--color-secondary-fg));
  font-size: calc(var(--font-size) * var(--space-medium));
  font-weight: 600;
}

.bookmark-group > ul {
  margin: 0;
  padding: 0;
  padding-right: var(--space-medium);
}

.bookmark-group > ul > li {
  position: relative;
  list-style: none;
}

.bookmark-group > ul > li > a {
  display: block;
  padding: 2px 0;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow-x: hidden;
  width: 100%;
  outline: none;
}

.bookmark-group > ul > li > a:hover::before,
.bookmark-group > ul > li > a:focus-visible::before {
  content: ">";
  position: absolute;
  left: -0.75rem;
}

/* Settings */

.settings-tab {
  position: relative;
}

.settings-options-wrapper {
  position: absolute;
  display: flex;
  align-items: baseline;
  flex-direction: row;
  gap: var(--space-medium);
  width: max-content;
  transform: translate(calc(-100% - var(--space-medium)), -100%);
}

.settings-btn {
  width: max-content;
  height: max-content;
  padding: 6px 12px;
  border-top-left-radius: var(--surface-borderRadius);
  border-top-right-radius: var(--surface-borderRadius);
  border: solid 2px rgb(var(--color-primary-base));
  background-color: transparent;
  cursor: pointer;
}

.settings-btn > svg {
  height: 18px;
}

:hover.settings-btn > svg {
  height: 32px;
}

/* General Utils */

.icon {
  height: 18px;
}

.disclosure {
  cursor: pointer
}

.bookmarks-settings .icon {
  cursor: pointer;
}


.bookmarks-settings .icon:hover {
  color: rgb(var(--color-primary-fg));
}

.modal .close-icon {
  position: absolute;
  right: var(--space-large);
  height: 24px;
  cursor: pointer;
}

.search-engine-menu {
  position: relative;
  display: flex;
  align-items: center;
}

.engine-option {
  color: rgb(var(--color-primary-fg));
  stroke: rgb(var(--color-primary-fg));
  fill: rgb(var(--color-primary-fg));
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  cursor: pointer;
}


.engine-option:hover {
  color: rgb(var(--color-primary-base));
  stroke: rgb(var(--color-primary-base));
  fill: rgb(var(--color-primary-base));
}

.engine-option .icon, .search-engine-list .icon {
  height: calc(var(--font-size) * var(--space-large));
}

.search-engine-list .icon {
  cursor: pointer;
}

.search-engine-list {
  position: absolute;
  display: flex;
  flex-direction: column;
  padding: 0;
  gap: var(--space-medium);
  top: calc(var(--space-medium) * 2);
  left: 50%;
  transform: translateX(-50%);
  margin: 0;
  z-index: 9999;
  background-color: rgb(var(--color-bg-base));
  color: rgb(var(--color-primary-fg));
  stroke: rgb(var(--color-primary-fg));
  fill: rgb(var(--color-primary-fg));
  list-style: none;
  border: var(--space-smallest) solid rgb(var(--color-primary-base));
  border-radius: var(--surface-borderRadius);
  padding: var(--space-medium) var(--space-smallest);

}


.general-settings h1 .icon {
  height: 24px;
}


.theme-settings-section {
  display: flex;
  flex-direction: column;
  gap: var(--space-large);
}

.theme-colors {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  gap: var(--space-large);
}


.input-label {
  display: flex;
  flex-direction: column;
  gap: var(--space-medium)
}